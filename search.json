[{"title":"oracle分配IPv6地址的问题","url":"/2024/04/07/oracle分配IPv6地址的问题/","content":"突然有兴致想给甲骨文的arm机器分配一个ipv6的地址，按网上的教程给ubuntu机器分配好了ipv6，但是另外一台Oracle-Linux却卡在了dhclient -6 enp0s3这一步。\n\n<!--more-->\n最后结果是问了下ChatGpt，结果如下：\n```\n如果 `dhclient -6 enp0s3` 命令没有能够获取到 IPv6 地址，可能有几个方面可以检查和尝试：\n\n1. **DHCPv6 服务器**：确保您的网络环境中存在一个运行着的 DHCPv6 服务器，并且已经正确配置了 IPv6 地址池。服务器必须能够响应 IPv6 的 DHCP 请求。\n\n2. **路由器广告（RA）**：许多 IPv6 网络使用路由器广告消息来通知设备是否应使用 DHCPv6 来获取 IPv6 地址。确认您的网络路由器或交换机有 RA 功能并已开启。\n\n3. **网络接口配置**：检查网络接口配置文件以确保允许接口通过 DHCPv6 获取地址。对于某些 Linux 发行版来说，可能需要编辑 `/etc/network/interfaces` 或 `/etc/sysconfig/network-scripts/ifcfg-enp0s3`（路径和名称可能因发行版而异）文件。\n\n4. **防火墙规则**：确认防火墙规则没有阻止外出和进入的 DHCPv6 流量。您需要允许 UDP 端口 546 (客户端) 和 547 (服务器) 的流量。\n\n5. **服务状态**：确认在您的系统上 DHCPv6 客户端服务是否成功运行。一些系统可能使用不同的 DHCP 客户端，如 `dhcpcd` 或 `NetworkManager`。\n\n6. **客户端日志**：检查 `dhclient` 的日志输出来获取详细的错误信息或警告。可以使用 `journalctl` 或查看 `/var/log/syslog`（或类似的日志文件）来获得更多信息。\n\n7. **手动释放和续租**：尝试手动释放 IPv6 地址并重新启动 DHCP 进程来请求新的 IPv6 地址。可以用 `dhclient -6 -r` 命令释放地址，然后再次使用 `dhclient -6` 来请求地址。\n\n8. **网络重启**：有时候，尝试重启整个网络服务或者系统本身也能解决获取地址的问题。\n\n9. **临时性问题**：某些情况下，服务商侧的临时性问题或设备故障也可能导致 DHCPv6 请求失败。联系您的网络管理员或服务商以确定是否有已知的问题。\n\n如果以上步骤都无法解决问题，可能需要进行更深入的调查和排查。在极端情况下，网络硬件本身可能存在缺陷或不支持 IPv6，但这种情况通常比较罕见。\n```\n\n盲猜是不是防火墙的问题，所以就尝试了添加546,547端口：\n\n```bash\nsudo firewall-cmd --permanent --add-port=546/udp\nsudo firewall-cmd --permanent --add-port=547/udp\nsudo firewall-cmd --reload\n```\n\n然后再执行```dhclient -6 enp0s3```，成功解决问题"},{"title":"企业微信对接gemini","url":"/2024/02/18/企业微信对接gemini/","content":"chatgpt由于需要国外手机获取token才能调用api，过于麻烦一直没有折腾，后来发现谷歌的gemini可以直接生成apikey调用，而且官网也给了很多demo，比如python，go，nodejs等，所以就简单折腾一下。"},{"title":"第一次安装code-server碰到的问题","url":"/2024/02/05/第一次安装code-server碰到的问题/","content":"因为在服务器上部署了hexo，每次又不想在本地再pull一份下来修改，就在服务器上又部署了一个code-server，这样就可以直接在网页修改代码，然后发布到github上，方便快捷，如果有点什么开发也可以直接网页调试，无需远程调试了。在部署的时候碰到几个问题，这里记录一下。\n\n<!--more-->\n## 服务端口被占用\n因为在服务器上安装了很多服务，例如像127.0.0.1:8080端口早就被别的服务占用了\n\n> The standalone arm64 .deb does not support Ubuntu 16.04 or earlier. Please\n> upgrade or [build with npm](#npm).\n\n```bash\ncurl -fOL https://github.com/coder/code-server/releases/download/v$VERSION/code-server_${VERSION}_amd64.deb\nsudo dpkg -i code-server_${VERSION}_amd64.deb\nsudo systemctl enable --now code-server@$USER\n# Now visit http://127.0.0.1:8080. Your password is in ~/.config/code-server/config.yaml\n```\n\n报错如下：\n```\nroot@kubernetes-master:/# systemctl status code-server@root\n× code-server@root.service - code-server\n     Loaded: loaded (/lib/systemd/system/code-server@.service; enabled; vendor preset: enabled)\n     Active: failed (Result: exit-code) since Mon 2024-02-05 09:52:00 CST; 37min ago\n   Main PID: 3855609 (code=exited, status=1/FAILURE)\n        CPU: 892ms\n\nFeb 05 09:52:00 kubernetes-master systemd[1]: code-server@root.service: Scheduled restart job, restart counter is at 5.\nFeb 05 09:52:00 kubernetes-master systemd[1]: Stopped code-server.\nFeb 05 09:52:00 kubernetes-master systemd[1]: code-server@root.service: Start request repeated too quickly.\nFeb 05 09:52:00 kubernetes-master systemd[1]: code-server@root.service: Failed with result 'exit-code'.\nFeb 05 09:52:00 kubernetes-master systemd[1]: Failed to start code-server.\n```\n\n但是这时配置文件也没有生成，查看service文件也没有提示有配置文件\n\n```\n~ cat /lib/systemd/system/code-server@.service\n[Unit]\nDescription=code-server\nAfter=network.target\n\n[Service]\nType=exec\nExecStart=/usr/bin/code-server\nRestart=always\nUser=%i\n\n[Install]\nWantedBy=default.target\n```\n\n这时尝试手工执行code-server命令，就会在用户目录下生成.config文件夹了，这时的报错也比较明显了：\n\n```\nroot@kubernetes-master:/# code-server\n[2024-02-05T02:30:25.326Z] info  Wrote default config file to /root/.config/code-server/config.yaml\n[2024-02-05T02:30:25.687Z] info  code-server 4.20.1 e76afa4a2bf4667a3c9f71bf56ef34b8ad365fbe\n[2024-02-05T02:30:25.687Z] info  Using user-data-dir /root/.local/share/code-server\n[2024-02-05T02:30:25.692Z] error listen EADDRINUSE: address already in use 127.0.0.1:8080\n\n```\n\n这时只需要去修改/root/.config/code-server/config.yaml文件，修改绑定的地址和端口就可以了。\n\nPS：也可能是我之前装了又删了导致，可能没有可复现性，而且既然装好了，自然也就不再折腾了\n\n## domain.name/code页面提示报错\n\nnginx的配置是这样的：\n```\nlocation /code/ {\n     proxy_pass http://127.0.0.1:9000;\n     # sendfile off;\n     add_header X-debug-message \"/code/\" always;\n     proxy_set_header   Host             $host;\n     proxy_set_header   X-Real-IP        $remote_addr;\n     proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;\n     rewrite  ^/code/(.*)  /$1 break;\n     }\n```\n报错是：\nAn unexpected error occurred that requires a reload of this page.\nThe workbench failed to connect to the server (Error: WebSocket close with status code 1006)\n加上以下3行即可：\n```\nproxy_set_header Upgrade $http_upgrade;\nproxy_set_header Connection upgrade;\nproxy_set_header Accept-Encoding gzip;\n```\n\n## 自带的terminal不能使用之前的alias，不能使用方向键\n\n直接使用bash就可以了，反正部署在云端，24小时不关机，bash一下，以后无忧呀。。。\n\n\n"},{"title":"个人博客上线","url":"/2024/02/05/个人博客上线/","content":"大家好，这是我新创建的博客页面，这里仅会记录一些工作、生活上的事。。。"}]